fn rand(x : i32, y : i32, z : i32, w : i32) -> i32 { 
  t := i32$ 0;
 
  t = x xor (x << 11);
  x = y; y = z; z = w;
  w = (w xor (w >> 19)) xor (t xor (t >> 8));
  ret w;
}
fn main() -> i32{
	map := i32[25][51]();
	i := i32(0);
	j := i32(0);
	while(i < 25){
		j = 0;
		while(j < 51){
			map[i][j] = 1;
			j = j + 1;
		}
		i = i + 1;
	}
	x := i32(3);
	y := i32(3);
	r1 := i32$ 10;
	r2 := i32$ 11;
	r3 := i32$ 12;
	r4 := i32$ 13;
	judge := i32(0);
	exp := i32(0);
	rand_ret := i32(0);
	while(judge == 0){
		map[y][x] = 0;
		exp = exp + 1;
		if(exp == 5){
			judge = 1;
		}
		rand_ret = rand(r1,r2, r3, r4) % 4;
		r1 = r1 + 1;
		if(r2 % 5 == 0)r2 = r2 * 2;
		r3 = r3 + 2;
		r4 = r4 * 3;
		i = i + 1;
		cnt := i32(0);
		if((y-1) > 0){
			if(map[y-1][x] == 1){
				if(map[y-2][x] == 1){
					map[y-1][x] = 0;
					y = y - 2;
					cnt = cnt + 1;
				}
			}
		}
		if((x-1) > 0){
			if(map[y][x-1] == 1){
				if(map[y][x-2] == 1){
					map[y][x-1] = 0;
					x = x - 2;
					cnt = cnt + 1;
				}
			}
		}
		if((y+1) < 24){
			if(map[y+1][x] == 1){
				if(map[y+2][x] == 1){
					map[y+1][x] = 0;
					y = y + 2;
					cnt = cnt + 1;
				}
			}
		}
		if((x+1) < 50){
			if(map[y][x+1] == 1){
				if(map[y][x+2] == 1){
					map[y][x+1] = 0;
					x = x + 2;
					cnt = cnt + 1;
				}
			}
		}
		if(cnt == 0){
			jd := i32 $ 0;
			jd_ := i32(0);
			while(jd == 0){
				while(jd_ == 0){
					t := i32 $ rand(r1,r2, r3, r4) % 51;
					r1 = r1 + 1;
					if(r2 % 5 == 0)r2 = r2 * 2;
					r3 = r3 + 2;
					r4 = r4 * 3;
					t_ := i32 $ t % 2;
					if(t_ == 1){
						x = t;
						jd_ = 1;
					}
				}
				jd_ = 0;
				while(jd_ == 0){
					t1 := i32 $ rand(r1,r2, r3, r4) % 25;
					r1 = r1 + 1;
					if(r2 % 5 == 0)r2 = r2 * 2;
					r3 = r3 + 2;
					r4 = r4 * 3;
					t1_ := i32 $ t1 % 2;
					if(t1_ == 1){
						y = t1;
						jd_ = 1;
					}
				}
				if(map[y][x] == 0){
					jd = 1;
				}
			}
		}
		r1 = r1 + 1;
		if(r2 % 5 == 0)r2 = r2 * 2;
		r3 = r3 + 2;
		r4 = r4 * 3;
	}
	i = 0;
	while(i < 25){
		j = 0;
		while(j < 51){
			if(map[i][j] == 0){
				writef(" ");
			}
			else{
				writef("#");
			}
			j = j + 1;
		}
		writefln(" ");
		i = i + 1;
	}
	ret i;
}