fn rand(r : i32[4]) -> i32 { 
  t := 0;
 
  t = r[0] xor (r[0] << 11);
  r[0] = r[1]; r[1] = r[2]; r[2] = r[3];
  r[3] = (r[3] xor (r[3] >> 19)) xor (t xor (t >> 8));
  ret r[3];
}
fn display(a : i32[9][9]){
	i := 0;
	j := 0;
	while(i < 10) {
		j = 0;
		while(j < 10) {
			if(a[i][j] == 1)
				writef("#");
			else
				writef(" ");
			j = j + 1;
		}
		writefln(" ");
		i = i + 1;
	}
	ret;
}
fn r_update(r : i32[4]){
	r[0] = r[0] + 1;
	r[1] = r[1] * 2;
	r[2] = r[2] + 3;
	r[3] = r[0] + r[3];
	ret;
}
fn maze(a : i32[9][9]){
	i := 3;
	j := 3;
	r := i32[4]{5,6,2,10};

	jud := 0;
	ran := 0;
	exp := 0;
	while(jud == 0) {
		if(exp > 300) jud = 1;
		suc := 0;
		ran = rand(r) % 4;
		r_update(r);
		if(ran == 0 && i-2 >= 0) {
			if(a[i][j] == 1 && a[i-1][j] == 1){
				a[i][j] = 0;
				a[i-1][j] = 0;
				i = i - 2;
				suc = 1;
			}
		}
		if(ran == 1 && j-2 >= 0) {
			if(a[i][j] == 1 && a[i][j-1] == 1){
				a[i][j] = 0;
				a[i][j-1] = 0;
				j = j - 2;
				suc = 1;
			}
		}
		if(ran == 2 && i+2 < 9) {
			if(a[i][j] == 1 && a[i+1][j] == 1){
				a[i][j] = 0;
				a[i+1][j] = 0;
				i = i + 2;
				suc = 1;
			}
		}
		if(ran == 3 && j+2 < 9) {
			if(a[i][j] == 1 && a[i][j+1] == 1){
				a[i][j] = 0;
				a[i][j+1] = 0;
				j = j + 2;
				suc = 1;
			}
		}
		if(suc == 0){
			while(i % 2 == 1 || j % 2 == 1){
				i = rand(r) % 9;
				r_update(r);
				j = rand(r) % 9;
				r_update(r);
				exp = exp + 1;
			}
		}
	}
	ret;
}
fn main() -> i32{
	map := i32[9][9];
	i := 0;
	j := 0;
	while(i < 10) {
		j = 0;
		while(j < 10) {
			map[i][j] = 1;
			j = j + 1;
		}
		i = i + 1;
	}
	maze(map);
	display(map);
	ret;
}